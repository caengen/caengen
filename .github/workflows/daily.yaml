name: Daily Workflow with Cowsay and Sine Curve Commits

on:
  push:
    branches: ["master"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository and set up Node.js.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # Step 2: Install cowsay, create README with cowsay output.
      - name: Install cowsay
        run: npm i -g cowsay
      
      - name: Create README with cowsay
        run: |
          echo "$(echo $'```\r\n')$(cowsay -r "hello?")$(echo $'\r\n```')" > README.md
      
      # Step 3: Commit and push the README update.
      - name: Commit README updates
        uses: EndBug/add-and-commit@v9
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add: "./README.md"
      
      # To avoid interference from the previous commit push, check out again.
      - name: Checkout repository again for sine commits
        uses: actions/checkout@v3

      # Step 4: Generate sine-curve commits over the past week.
      - name: Generate Sine Curve Commits
        run: |
          # Define the file to update for sine commits.
          FILE="sine.txt"
          if [ ! -f "$FILE" ]; then
            echo "Sine Commit Log" > "$FILE"
          fi

          # Set maximum commits for the peak day.
          max_commits=10

          # Loop over 7 days.
          # Here, day 0 represents 6 days ago and day 6 is today.
          for day in {0..6}; do
              # Calculate commit count using a sine curve.
              # The formula sin(pi*(day+1)/8) produces a low-high-low pattern.
              commits=$(python3 -c "import math; print(int(round(math.sin(((($day + 1)/8.0)*math.pi))*$max_commits)))")
              
              # Compute the commit date. Adjust the offset as needed.
              commit_date=$(date -d "$((6 - day)) days ago" +"%Y-%m-%dT12:00:00")
              
              echo "For date $commit_date, making $commits commit(s)"
              
              if [ $commits -gt 0 ]; then
                for ((i=1; i<=commits; i++)); do
                  # Append a unique line for each commit so that there is a change.
                  echo "Sine commit for $commit_date – commit #$i" >> "$FILE"
                  git add "$FILE"
                  # Backdate the commit by setting the commit dates.
                  GIT_AUTHOR_DATE="$commit_date" GIT_COMMITTER_DATE="$commit_date" git commit -m "Sine commit for $commit_date – commit #$i"
                done
              fi
          done

          # Push all backdated sine commits.
          git push origin master
